// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace RapidBootcamp.ETLSampel.RapidDw;

public partial class RapidDwContext : DbContext
{
    //public RapidDwContext(DbContextOptions<RapidDwContext> options)
    //    : base(options)
    //{
    //}

    public virtual DbSet<DimProduct> DimProducts { get; set; }

    public virtual DbSet<DimWallet> DimWallets { get; set; }

    public virtual DbSet<FactSale> FactSales { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        base.OnConfiguring(optionsBuilder);

        optionsBuilder.UseSqlServer("Server=.\\;Database=RapidDW;Trusted_Connection=True;TrustServerCertificate=True;");
    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<DimProduct>(entity =>
        {
            entity.HasKey(e => e.ProductId);

            entity.ToTable("Dim_Products");

            entity.Property(e => e.CategoryName)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Price).HasColumnType("money");
            entity.Property(e => e.ProductName)
                .IsRequired()
                .HasMaxLength(255);
        });

        modelBuilder.Entity<DimWallet>(entity =>
        {
            entity.HasKey(e => e.WalletId);

            entity.ToTable("Dim_Wallets");

            entity.Property(e => e.CustomerCity).HasMaxLength(255);
            entity.Property(e => e.CustomerEmail).HasMaxLength(255);
            entity.Property(e => e.CustomerName).HasMaxLength(255);
            entity.Property(e => e.CustomerPhoneNumber).HasMaxLength(255);
            entity.Property(e => e.Saldo).HasColumnType("money");
            entity.Property(e => e.WalletTypeName).HasMaxLength(255);
        });

        modelBuilder.Entity<FactSale>(entity =>
        {
            entity.HasKey(e => e.SalesId);

            entity.ToTable("Fact_Sales");

            entity.Property(e => e.OrderHeaderId)
                .HasMaxLength(8)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Price).HasColumnType("money");
            entity.Property(e => e.TotalSales).HasColumnType("money");

            entity.HasOne(d => d.Product).WithMany(p => p.FactSales)
                .HasForeignKey(d => d.ProductId)
                .HasConstraintName("FK_Fact_Sales_Dim_Products");

            entity.HasOne(d => d.Wallet).WithMany(p => p.FactSales)
                .HasForeignKey(d => d.WalletId)
                .HasConstraintName("FK_Fact_Sales_Dim_Wallets");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}